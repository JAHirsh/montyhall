# Answer:
trimws(dat$mission)
pat = "[anything but a space] [ending with a space]"
ws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( ws ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer:
pat = "[anything but a space] [ending with a space]"
ws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( ws ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer:
pat = ""^\\s+|\\s+$""
# Q3 - How many missions have trailing spaces?
# Answer:
pat = "^\\s+|\\s+$"
ws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( ws ) %>% pander()
trimws(dat$mission, which = c("both", "left", "right"), whitespace = [t\r\n]")
trimws(dat$mission, which = c("both", "left", "right"), whitespace = [t\r\n]")
trimws(dat$mission, which = c("both", "left", "right"), whitespace = "[t\r\n]")
pat = "^\\s+|\\s+$"
aftertrimws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( aftertrimws ) %>% pander()
trimws(dat$mission, which = c("both", "left", "right"), whitespace = "[t\r\n]")
pat = "^\\s+|\\s+$"
aftertrimws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( aftertrimws ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464 before trimming space
grep("[[:space:]]+$", dat$mission)
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "^\\s+|\\s+$"
ws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( ws ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "^\\s+|\\s+$"
ws <- grepl( pat, dat$mission, ignore.case = TRUE)
table( ws ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "^\\s+|\\s+$"
trailingspaces <- grepl( pat, dat$mission, ignore.case = TRUE)
table( trailingspaces ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "[^\\s+|\\s+$]"
trailingspaces <- grepl( pat, dat$mission, ignore.case = TRUE)
table( trailingspaces ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "^\\s+|\\s+$"
trailingspaces <- grepl( pat, dat$mission, ignore.case = TRUE)
table( trailingspaces ) %>% pander()
# Q4 - How many have a $ sign?
# Answer:
pat = "*$"
dollar <- grepl( pat, dat$mission, ignore.case = TRUE)
table( dollar ) %>% pander()
# Q4 - How many have a $ sign?
# Answer:
pat = "*$"
dollar <- grepl( pat, dat$mission, ignore.case = TRUE)
table( dollar ) %>% pander()
# Q4 - How many have a $ sign?
# Answer:
pat = "\\$"
dollar <- grepl( pat, dat$mission, ignore.case = TRUE)
table( dollar ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "\\d, \\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "[0-9], \\d, \\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "\\d, \\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "(\\d, \\d)"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "*\\d, \\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "\\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "\\d, \\d"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer:
pat = "[0-9]{2}"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Part 2 - Q1
# Answer:
# library( quanteda )
dat$mission <- tolower( dat$mission )
dat.sample <- dat[ sample( 1:50000, size=1000 ) , ]
corp <- corpus( dat.sample,  text_field="mission" )
corp
corp[1:5]
summary(corp)[1:10]
corp <- corpus_trim( corp, what="sentences", min_ntoken=3 )
tokens <- tokens( corp, what="word", remove_punct=TRUE )
head( tokens )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list( five01_c_3= c("501 c 3","section 501 c 3") ,
united_states = c("united states"),
high_school=c("high school"),
non_profit=c("non-profit", "non profit"),
stem=c("science technology engineering math",
"science technology engineering mathematics" ),
los_angeles=c("los angeles"),
ny_state=c("new york state"),
ny=c("new york")
))
tokens <- tokens_compound( tokens, pattern=my_dictionary )
head( tokens )
ngram2 <- tokens_ngrams( tokens, n=2 ) %>% dfm()
ngram2 %>% textstat_frequency( n=10 )
ngram3 <- tokens_ngrams( tokens, n=3 ) %>% dfm()
ngram3 %>% textstat_frequency( n=10 )
tokens %>% dfm( stem=F ) %>% topfeatures( )
# Part 2
dat$mission <- tolower( dat$mission )
corp <- corpus( dat$mission,  text_field="mission" )
corp
corp[1:5]
# Part 2
dat$mission <- tolower( dat$mission )
corp <- corpus( dat$mission)
corp
# Part 2
dat$mission <- tolower( dat$mission )
corp <- corpus( dat$mission)
corp
corp[1:5]
summary(corp)[1:10]
# Part 2
dat$mission <- tolower( dat$mission )
corp <- corpus( dat$mission)
corp
corp[1:5]
summary(corp)[1:10,]
corp <- corpus_trim( corp, what="sentences", min_ntoken=3 )
tokens <- tokens( corp, what="word", remove_punct=TRUE )
head( tokens )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list( five01_c_3= c("501 c 3","section 501 c 3") ,
united_states = c("united states"),
high_school=c("high school"),
non_profit=c("non-profit", "non profit"),
stem=c("science technology engineering math",
"science technology engineering mathematics" ),
los_angeles=c("los angeles"),
ny_state=c("new york state"),
ny=c("new york")
))
tokens <- tokens_compound( tokens, pattern=my_dictionary )
head( tokens )
ngram2 <- tokens_ngrams( tokens, n=2 ) %>% dfm()
ngram2 %>% textstat_frequency( n=10 )
ngram3 <- tokens_ngrams( tokens, n=3 ) %>% dfm()
ngram3 %>% textstat_frequency( n=10 )
tokens %>% dfm( stem=F ) %>% topfeatures( )
tokens %>% dfm( stem=T ) %>% topfeatures( )
tokens %>% dfm( stem=F ) %>% topfeatures( )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list( five01_c_3= c("501 c 3","section 501 c 3") ,
united_states = c("united states"),
high_school=c("high school"),
non_profit=c("non-profit", "non profit"),
stem=c("science technology engineering math",
"science technology engineering mathematics" ),
los_angeles=c("los angeles"),
ny_state=c("new york state"),
ny=c("new york")
))
tokens <- tokens_compound( tokens, pattern=my_dictionary )
head( tokens )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list(low_income = c("low income"),
internal_revenue_code = c("internal revenue code"),
gospel_jesus_christ = c("gospel of jesus christ", "gospel jesus christ")
five01_c_3= c("501 c 3","section 501 c 3") ,
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list(low_income = c("low income"),
internal_revenue_code = c("internal revenue code"),
gospel_jesus_christ = c("gospel of jesus christ", "gospel jesus christ"),
five01_c_3= c("501 c 3","section 501 c 3") ,
united_states = c("united states"),
high_school=c("high school"),
non_profit=c("non-profit", "non profit"),
stem=c("science technology engineering math",
"science technology engineering mathematics" ),
los_angeles=c("los angeles"),
ny_state=c("new york state"),
ny=c("new york")
))
tokens <- tokens_compound( tokens, pattern=my_dictionary )
head( tokens )
tokens %>% dfm( stem=F ) %>% topfeatures( )
tokens %>% dfm( stem=F ) %>% topfeatures( )
tokens %>% dfm( stem=F ) %>% topfeatures( )
# Part 3
grep( "immigrant rights", dat$mission, value=TRUE ) %>% head()
grep( "immigration", dat$mission, value=TRUE ) %>% head()
grep( "refugee", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.immigrant <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.immigrant ) <- NULL
d.immigrant %>% head(25) %>% pander()
# Part 3 - Q1
grep( "black", dat$mission, value=TRUE ) %>% head()
# Part 3 - Q1
grep( "black", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "black", dat$mission )
criteria.02 <- grepl( "black community", dat$mission )
criteria.03 <- grepl( "black people", dat$mission )
criteria.04 <- grepl( "people of color", dat$mission )
criteria.05 <- grepl( "POC", dat$mission )
criteria.06 <- greple( "POCs", dat$mission)
# Part 3 - Q1
grep( "black", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "black", dat$mission )
criteria.02 <- grepl( "black community", dat$mission )
criteria.03 <- grepl( "black people", dat$mission )
criteria.04 <- grepl( "people of color", dat$mission )
criteria.05 <- grepl( "POC", dat$mission )
criteria.06 <- grepl( "POCs", dat$mission)
# Part 3 - Q1
grep( "black", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "black", dat$mission )
criteria.02 <- grepl( "black community", dat$mission )
criteria.03 <- grepl( "black people", dat$mission )
criteria.04 <- grepl( "people of color", dat$mission )
criteria.05 <- grepl( "POC", dat$mission )
criteria.06 <- grepl( "POCs", dat$mission)
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black  %>% pander()
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
d.black
sample <- dplyr::sample_n( d.black, 20 )
sample <- dplyr::sample_n( d.black, 20 )
sample <- dplyr::sample_n( d.black, 20 )
# Part 3 - Q1:
# Answer: 204
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
d.black
sample <- dplyr::sample_n( d.black, 20 )
# Part 3 - Q1:
# Answer: 204
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
d.black
sample <- dplyr::sample_n( d.black, 20 )
sample <- dplyr::sample_n( d.black, 20 )
# Part 3 - Q1:
# Answer: 204
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
d.black
sample <- dplyr::sample_n( d.black, 20 )
sample <- dplyr::sample_n( d.black, 20 )
sample <- dplyr::sample_n( d.black, 20 )
head()
sample <- dplyr::sample_n( d.black, 20 )
sample
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
quanteda.bundle <- c( "quanteda", "quanteda.textmodels",
"quanteda.textstats", "quanteda.textplots" )
install.packages( quanteda.bundle )
quanteda.bundle <- c( "quanteda", "quanteda.textmodels",
"quanteda.textstats", "quanteda.textplots" )
install.packages( quanteda.bundle )
install.packages(quanteda.bundle)
install.packages(quanteda.bundle)
install.packages(quanteda.bundle)
quanteda.bundle <- c( "quanteda", "quanteda.textmodels",
"quanteda.textstats", "quanteda.textplots" )
install.packages( quanteda.bundle )
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats)
install.packages(c("cli", "desc", "gargle", "gert", "gh", "gitcreds", "httpuv", "lifecycle", "RcppArmadillo", "terra", "tidyr", "zip"))
install.packages(c("cli", "desc", "gargle", "gert", "gh", "gitcreds", "httpuv", "lifecycle", "RcppArmadillo", "terra", "tidyr", "zip"))
install.packages(c("cli", "desc", "gargle", "gert", "gh", "gitcreds", "httpuv", "lifecycle", "RcppArmadillo", "terra", "tidyr", "zip"))
knitr::opts_chunk$set(echo = TRUE)
quanteda.bundle <- c( "quanteda", "quanteda.textmodels",
"quanteda.textstats", "quanteda.textplots" )
install.packages( quanteda.bundle )
library( dplyr )
library( pander )
library( quanteda )
library( quanteda.textmodels )
library( quanteda.textstats )
library( quanteda.textplots )
URL <- "https://github.com/DS4PS/cpp-527-spr-2020/blob/master/labs/data/IRS-1023-EZ-MISSIONS.rds?raw=true"
dat <- readRDS(gzcon(url( URL )))
install.packages(quanteda.bundle)
nrow(dat)
head( dat[ c("orgname","codedef01","mission") ] ) %>% pander()
grep( pattern="[0-9]", x=dat$mission, value=TRUE ) %>% head()
pat = "[0-9]"
nine <- grepl( pat, dat$mission)
table(nine) %>% pander()
# Q1 - How many start with "to"?
# Answer: 11,304
pat = "^to "
to <- grepl( pat, dat$mission, ignore.case = TRUE )
table( to ) %>% pander()
# Q2- How many mission fields are blank?
# Answer: 1,397
pat = ""
blank <- grepl( pat, dat$mission, ignore.case = TRUE )
table( blank ) %>% pander()
# Q3 - How many missions have trailing spaces?
# Answer: 3,464
pat = "^\\s+|\\s+$"
trailingspaces <- grepl( pat, dat$mission, ignore.case = TRUE)
table( trailingspaces ) %>% pander()
trimws(dat$mission, which = c("both", "left", "right"), whitespace = "[t\r\n]")
# Q4 - How many have a $ sign?
# Answer: 43
pat = "\\$"
dollar <- grepl( pat, dat$mission, ignore.case = TRUE)
table( dollar ) %>% pander()
# Q5 - How many mission statements contain numbers at least 2 digits long?
# Answer: 3,317
pat = "[0-9]{2}"
digits <- grepl( pat, dat$mission, ignore.case = TRUE)
table( digits ) %>% pander()
# Part 2
dat$mission <- tolower( dat$mission )
corp <- corpus( dat$mission)
corp
corp[1:5]
summary(corp)[1:10,]
corp <- corpus_trim( corp, what="sentences", min_ntoken=3 )
tokens <- tokens( corp, what="word", remove_punct=TRUE )
head( tokens )
tokens <- tokens_remove( tokens, c( stopwords("english"), "nbsp" ), padding=F )
my_dictionary <- dictionary( list(low_income = c("low income"),
internal_revenue_code = c("internal revenue code"),
gospel_jesus_christ = c("gospel of jesus christ", "gospel jesus christ"),
five01_c_3= c("501 c 3","section 501 c 3") ,
united_states = c("united states"),
high_school=c("high school"),
non_profit=c("non-profit", "non profit"),
stem=c("science technology engineering math",
"science technology engineering mathematics" ),
los_angeles=c("los angeles"),
ny_state=c("new york state"),
ny=c("new york")
))
tokens <- tokens_compound( tokens, pattern=my_dictionary )
head( tokens )
ngram2 <- tokens_ngrams( tokens, n=2 ) %>% dfm()
ngram2 %>% textstat_frequency( n=10 )
ngram3 <- tokens_ngrams( tokens, n=3 ) %>% dfm()
ngram3 %>% textstat_frequency( n=10 )
tokens %>% dfm( stem=F ) %>% topfeatures( )
# Part 3
grep( "immigrant rights", dat$mission, value=TRUE ) %>% head()
grep( "refugee", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "immigrant rights", dat$mission )
criteria.02 <- grepl( "immigration", dat$mission )
criteria.03 <- grepl( "refugee", dat$mission )
criteria.04 <- grepl( "humanitarian", dat$mission )
criteria.05 <- ! grepl( "humanities", dat$mission )
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 ) &  criteria.05
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.immigrant <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.immigrant ) <- NULL
d.immigrant %>% head(25) %>% pander()
# Part 3 - Q1
grep( "black", dat$mission, value=TRUE ) %>% head()
criteria.01 <- grepl( "black", dat$mission )
criteria.02 <- grepl( "black community", dat$mission )
criteria.03 <- grepl( "black people", dat$mission )
criteria.04 <- grepl( "people of color", dat$mission )
criteria.05 <- grepl( "POC", dat$mission )
criteria.06 <- grepl( "POCs", dat$mission)
# Part 3 - Q1:
# Answer: 204
these.nonprofits <- ( criteria.01 | criteria.02 | criteria.03 | criteria.04 | criteria.05 | criteria.06 )
sum( these.nonprofits )
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
d.black
# Part 3 - Q2:
# Answer: 85%. 17/20 nonprofits serve the Black community.
sample <- dplyr::sample_n( d.black, 20 )
sample
dat$activity.code <- paste0( dat$codedef01, ": ", dat$codedef02 )
d.black <- dat[ these.nonprofits, c("orgname","activity.code","mission") ]
row.names( d.black ) <- NULL
d.black %>% head(25) %>% pander()
devtools::install( "montyhall" )
create_game()
library( montyhall )
create_game()
help( "create_game" )
setwd( "montyhall" )
getwd()   # 'C:/Users/username/Documents/montyhall'
devtools::document()
rm(list = c("change_door", "create_game", "determine_winner",
  "open_goat_door", "select_door"))
q()
